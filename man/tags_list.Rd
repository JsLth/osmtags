% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/tags.R
\name{tags_list}
\alias{tags_list}
\alias{tags_popular}
\title{Tags}
\source{
\url{https://taginfo.openstreetmap.org/taginfo/apidoc}
}
\usage{
tags_list(tags = NULL, key = NULL)

tags_popular(query = NULL, ...)
}
\arguments{
\item{tags}{A character vector of key-value pairs to match. Must be in the
format \code{"{key}={value}"}. Either this or \code{key} must be provided.}

\item{key}{A key to match key-value combinations. Either this or \code{tags}
must be provided.}

\item{query}{A search term to filter results by. For \code{key_combinations}
and \code{key_similar}, this matches the \code{other_key} column, for
\code{key_projects} the project name or tag value, for \code{key_values}
the value. Defaults to \code{NULL}, i.e. no filtering.}

\item{...}{Additional generic parameters used for pagination, filtering,
and sorting. Can include the following:

\itemize{
 \item{\code{page}: If pagination is enabled, specifies the page number.}
 \item{\code{rp}: Enables pagination and specifies the number of results
 returned per page.}
 \item{\code{filter}: A character vector specifying the OSM geometry type
 to filter the results by. For example, if \code{"nodes"}, only tags on
 nodes are returned. Can be several of \code{"all"} (no filtering),
 \code{"nodes"}, \code{"relations"}, or \code{"ways"}.}
 \item{\code{sortname}: Numeric column of the output by which to arrange the
 results.}
 \item{\code{sortorder}: Whether to sort ascending (\code{"asc"}) or
 descending (\code{"desc"}).}
}
Note that not all additional arguments are defined for all API methods.
For details, refer to \code{\link{api_spec}}.}
}
\value{
A dataframe containing various statistics on the specified tags
including the counts and fractions of the tags, whether they have a wiki
page and related OSM projects.
}
\description{
Query all tags. \code{tags_list} returns all specified tags or (alternatively)
a certain key. \code{tags_popular} returns a list of the most commonly used
tags.
}
\examples{
\donttest{# Get metadata on specified tags
tags_list(tags = c("amenity=hospital", "amenity=post_box"))

# ... or just query all tags for a certain key
tags_list(key = "amenity")

# Get the most common tags related to fire
tags_popular("fire")}
}
