% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/wiki.R
\name{wiki_data}
\alias{wiki_data}
\alias{wiki_languages}
\alias{ietf_languages}
\title{OSM wiki}
\usage{
wiki_data(query = NULL, lang = "en", ...)

wiki_languages()

ietf_languages(query = NULL, ...)
}
\arguments{
\item{query}{A search term to filter the results by. Searches language names
in case of \code{ietf_languages} and keys, values, relation types, item
codes and item descriptions in case of \code{wiki_data}.}

\item{lang}{Language of the description text. Defaults to english.}

\item{...}{Additional generic parameters used for pagination, filtering,
and sorting. Can include the following:

\itemize{
 \item{\code{page}: If pagination is enabled, specifies the page number.}
 \item{\code{rp}: Enables pagination and specifies the number of results
 returned per page.}
 \item{\code{filter}: A character vector specifying the OSM geometry type
 to filter the results by. For example, if \code{"nodes"}, only tags on
 nodes are returned. Can be several of \code{"all"} (no filtering),
 \code{"nodes"}, \code{"relations"}, or \code{"ways"}.}
 \item{\code{sortname}: Numeric column of the output by which to arrange the
 results.}
 \item{\code{sortorder}: Whether to sort ascending (\code{"asc"}) or
 descending (\code{"desc"}).}
}
Note that not all additional arguments are defined for all API methods.
For details, refer to \code{\link{api_spec}}.}
}
\value{
\code{wiki_data} returns a dataframe containing the keys and their
descriptions, relation types, and values. \code{wiki_languages} returns a
dataframe containing the native and english names as well as the number of
key pages and the number of tag pages. \code{ietf_languages} returns a
dataframe containing the defined languages as well as their type, description,
time added and additional notes.
}
\description{
Retrieve data from the OSM wiki including languages and key lists.
Additionally, \code{ietf_languages} returns a list of language tags from
the IETF BCP47 registry.
}
\examples{
\donttest{# Query languages
wiki_languages()
ietf_languages("irish")

# Get all amenities defined on the wiki
wiki_data("amenity")}
}
